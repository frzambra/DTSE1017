library(purrr)
iris |>
walk2(.y= unique(Species),
.f = \(x){
x |>
filter(Species = .y) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
iris |>
walk2(.y= unique(iris$Species),
.f = \(x){
x |>
filter(Species = .y) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
iris
iris |>
walk2(.y= unique(iris$Species),
.f = \(x){
x |>
filter(Species = .y) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
iris |>
map2(.y= unique(iris$Species),
.f = \(x){
x |>
filter(Species = .y) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
iris |>
map(.f = \(x){
especie <- unique(x$Species)
x |>
filter(Species == especie) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
iris |>
map(.f = \(x){
especie <- unique(Species)
x |>
filter(Species == especie) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
iris |> map(.f=Species)
iris |> map(.f=\(x) filter(x,Species == 'versicolor'))
names(iris)
iris |> map(.f=\(x) filter(x,Species == 'versicolor'))
iris |> map()
iris |> map(.x,.x)
iris |> map(.x,~.x)
iris |> map(.x,print(.x))
iris |> map(print(.x))
?map
iris |> map(.f = print(.x))
iris |> map(.f = \(x) print(x))
iris |> map(.f = ~print(.x))
especie <- iris |> distinct(Species)
library(dplyr)
especie <- iris |> distinct(Species)
especie
especie <- iris |> distinct(Species) |> pull(Species)
especie
especies |>
map(.f = \(x){
iris |>
filter(Species == x) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
especie |>
map(.f = \(x){
iris |>
filter(Species == x) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
especie |>
walk(.f = \(x){
iris |>
filter(Species == x) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
especie |>
walk(.f = \(x){
iris |>
filter(Species == x) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
plots <- especie |>
walk(.f = \(x){
iris |>
filter(Species == x) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
plots
especie |>
walk(.f = \(x){
iris |>
filter(Species == x) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
}) |>
nchar()
especie |>
walk(.f = \(x){
iris |>
filter(Species == x) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
especie |>
walk(.f = \(x){
iris |>
filter(Species == x) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})->a
a
nchar(a)
plots <- especie |>
walk(.f = \(x){
iris |>
filter(Species == x) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
}) |>
as.character() |>
nchar()
plots
plots <- especie |>
walk(.f = \(x){
iris |>
filter(Species == x) |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
ggsave(paste0(x,'.png'))
}) |>
as.character() |>
nchar()
iris |>
group_by(species) |>
group_split
iris |>
group_by(species) |>
group_split()
iris |>
group_by(Species) |>
group_split()
iris_split <- iris |>
group_by() |>
group_split()
iris_split
iris_split |>
walk(.f = \(x){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
ggsave(paste0(x,'.png'))
})
iris_split |>
map(.f = \(x){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
ggsave(paste0(x,'.png'))
})
iris_split
iris_split[[1]]
iris_split |>
map(.f = \(x){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
iris_split |>
map(.f = \(x){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
iris_split |>
map(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
iris_split
length(iris_split)
iris_split <- iris |>
group_by(Species) |>
group_split()
iris_split
iris_split |>
map(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point()
})
iris_split |>
map(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm')
})
iris_split |>
map(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
})
iris |>
group_by(Species) |>
nest()
library(tidyr)
iris |>
group_by(Species) |>
nest()
iris_nest <- iris |>
group_by(Species) |>
nest()
iris_nest <- iris |>
group_by(Species) |>
nest()
iris_nest$data |>
map(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
})
iris_split |>
walk(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
})
iris_split |>
walk(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
}) |>
mutate(new_var = Sepal.Length / Petal.Length)
iris_split |>
walk(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
})
iris_split |>
walk(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
}) -> a
class(a)
a
iris_nest$data |>
walk(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
}) |>
mutate(new_var = Sepal.Length / Petal.Length)
iris_nest$data |>
walk(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
})
iris_nest$data |>
walk(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
}) -> a
class(a)
a
iris_nest$data |>
walk(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
}) |>
map(mutate(new_var = Sepal.Length / Petal.Length))
iris_nest$data |>
walk(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
}) |>
map(\(x) mutate(x,new_var = Sepal.Length / Petal.Length))
iris_nest$data |>
map(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
}) |>
map(\(x) mutate(x,new_var = Sepal.Length / Petal.Length))
iris_split |>
walk(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
}) |>
map(\(x) mutate(x,new_var = Sepal.Length / Petal.Length))
iris_split |>
walk(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
})
iris_split |>
walk(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
})
iris_split |>
walk(.f = \(x){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
#ggsave()
})
iris_split[[1]]
iris_split[[1]] |> names()
iris_split |> names()
iris_split[[1]] |> names()
str(iris_split)
iris_split |>
walk(.f = \(x){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
ggsave(paste0(unique(x$Species),'.png'))
}) |>
map(\(x) mutate(x,new_var = Sepal.Length / Petal.Length))
iris_nest$data |>
map(.f = \(x,factor){
x |>
ggplot(aes(Sepal.Length,Sepal.Width)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
}) |>
map(\(x) mutate(x,new_var = Sepal.Length / Petal.Length))
model <- lm(Sepal.Length~Petal.Length,iris)
summary(model)$coefficients
summary(model) -> r
r$residuals
r$cov.unscaled
r$call
r$terms
r$residuals
r$aliased
r$fstatistic
summary(model)$coefficients
iris_lm <- iris |>
group_by(Species) |>
nest() |>
mutate(lm = map(data,\(x) lm(Sepal.Length~., data = x)))
iris_lm
iris_lm |>
mutate(coefs = map(lm,\(x) {
summary(x)$coefficients
}))
iris_lm |>
mutate(coefs = map(lm,\(x) {
summary(x)$coefficients
}))
iris_lm |>
mutate(coefs = map(lm,\(x) {
summary(x)$coefficients
})) |> unnest(coefs)
?possibly
library(purrr)
?possibly
list("a", 10, 100) |>
map_dbl(safely(log,otherwise = NULL))
a <- list("a", 10, 100) |>
map_dbl(safely(log,otherwise = NULL))
a
a <- list("a", 10, 100) |>
map(safely(log,otherwise = NULL))
a
library(tidyr)
library(dplyr)
iris_nest <- iris |>
group_by(Species) |>
nest()
iris_nest
iris_nest$data
iris_nest$data |>
lapply(\(x) lm(Sepal.Length~Petal.Length, data = x))
iris_lm <- iris |>
group_by(Species) |>
nest() |>
mutate(lm =lapply(data,\(x) lm(Sepal.Length~Petal.Length, data = x)))
iris_lm
lapply(1:10,function(x) log)
lapply(1:1000,log)
system.time(lapply(1:1000,log))
system.time(lapply(1:1e6,log))
system.time(
for (i in 1:1e6){
log(i)
}
)
system.time(lapply(1:1e6,log))
system.time(sapply(1:1e6,log))
system.time(lapply(1:1e6,log))
system.time(
for (i in 1:1e6){
log(i)
}
)
system.time(v <- lapply(1:1e6,log))
system.time(
v <- for (i in 1:1e6){
log(i)
}
)
v
v <- c()
v <- c()
system.time(
for (i in 1:1e6){
v[i] <- log(i)
}
)
system.time(v <- lapply(1:1e6,log))
numeric(1e6)
v <- numeric(1e6)
system.time(
for (i in 1:1e6){
v[i] <- log(i)
}
)
system.time(v <- lapply(1:1e6,log))
system.time(v <- vapply(1:1e6,log))
?vapply
system.time(v <- vapply(1:1e6,FUN = log))
system.time(v <- vapply(1:1e6,FUN = log,FUN.VALUE = numeric(1e6)))
v
v <- numeric(1e6)
system.time(
for (i in 1:1e6){
v[i] <- log(i)
}
)
setwd("~/OneDrive/R-projects/Clases/DTSE1017/Evaluaciones/data")
library(readr)
data <- read_csv('data_yara.csv')
data
data |> names()
names(data)[1]
names(data)[1] <- 'datetime'
library(dplyr)
data
data |> pivot_longer(-datetime)
library(tidyr)
data |> pivot_longer(-datetime)
library(stringr)
data |> pivot_longer(-datetime) |> mutate(name=str_extract(name,'[0-9]{4}'))
data |> pivot_longer(-datetime) |> mutate(name=str_extract(name,'[0-9]{4}')) |> head()
data |> pivot_longer(-datetime) |> mutate(name=str_extract(name,'[0-9]{4}')) |> head() |> group_by(date_time,name) |> summarize(value = mean(value))
data |> pivot_longer(-datetime) |> mutate(name=str_extract(name,'[0-9]{4}')) |> head() |> group_by(datetime,name) |> summarize(value = mean(value))
