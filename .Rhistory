penguins %$%
plot(species, bill_length_mm)
library(magrittr)
penguins %$%
plot(species, bill_length_mm)
var <- penguins$bill_length_mm
var
var %<>% mean(na.rm=T)
var
var %>% mean(na.rm=T)
var <- penguins$bill_length_mm
var %>% mean(na.rm=T)
var
var %<>% mean(na.rm=T)
var
penguins %>%
subset(x = ., species == 'Adelie') %>%
print(n=3)
penguins %>%
subset(., species == 'Adelie') %>%
print(n=3)
penguins %>%
subset(species == 'Adelie')
args(subset)
penguins |>
subset(species == 'Adelie') |>
subset(select = -c(1,2,7)) |>
apply(2, mean, na.rm = TRUE)
penguins %>%
subset(species == 'Adelie')  %>%
subset(select = -c(1,2,7)) %>%
apply(2, mean, na.rm = TRUE)
penguins |>
subset(species == 'Adelie') |>
subset(select = -c(1,2,7)) |>
apply(2, mean, na.rm = TRUE)
args(lm)
penguins %>%
subset(species == 'Adelie') %>%
lm(bill_length_mm~flipper_length_mm, data = .)
penguins %>%
subset(species == 'Adelie') %>%
lm(bill_length_mm~flipper_length_mm)
args(lm)
penguins %>%
subset(species == 'Adelie') %>%
lm(bill_length_mm~flipper_length_mm,data = .)
penguins |>
subset(species == 'Adelie') |>
(\(d) lm(bill_length_mm~flipper_length_mm, data = d))()
# 4.2.0
penguins |>
subset(species == 'Adelie') |>
lm(bill_length_mm~flipper_length_mm, data =_)
penguins %>%
subset(species == 'Adelie') %>%
lm(bill_length_mm~flipper_length_mm,data = .) |>
.$coef
penguins %>%
subset(species == 'Adelie') %>%
lm(bill_length_mm~flipper_length_mm,data = .) %>%
.$coef
penguins %>%
subset(species == 'Adelie') %>%
lm(bill_length_mm~flipper_length_mm,data = .) %>%
.$coef
# 4.2.0
penguins |>
subset(species == 'Adelie') |>
lm(bill_length_mm~flipper_length_mm, data =_) |>
_$coef
# 4.2.0
penguins |>
subset(species == 'Adelie') |>
lm(bill_length_mm~flipper_length_mm, data =_) |>
_$coef
penguins |>
split(species)
penguins |>
split('species')
?split
penguins |>
split(split(penguins$species))
penguins |>
split(list(penguins$species)))
penguins |>
split(list(penguins$species))
penguins |>
split(list(penguins$species)) |>  class()
penguins |>
split(list(penguins$species)) |>  length()
names(penguins)
penguins |>
split(list(penguins$species)) |>
lapply(lm(bill_length_mm~flipper_length_mm,data = _))
penguins |>
split(list(penguins$species)) |>
lapply( \(x) lm(bill_length_mm~flipper_length_mm,data = x))
####
library(palmerpenguins)
penguins |>
split(list(penguins$species)) |>
lapply( \(x) lm(bill_length_mm~flipper_length_mm,data = x))
penguins |>
subset(species == 'Adeline')
penguins$species
penguins |>
subset(species == 'Chinstrap') |>
lm(bill_length_mm~flipper_length_mm,_)
penguins |>
subset(species == 'Chinstrap') |>
lm(bill_length_mm~flipper_length_mm,data = _)
penguins %>%
subset(species == 'Chinstrap') %>%
lm(bill_length_mm~flipper_length_mm,data = .)
library(magrittr)
penguins %>%
subset(species == 'Chinstrap') %>%
lm(bill_length_mm~flipper_length_mm,data = .)
penguins %>%
split(list(penguins$species)) %>%
lapply(lm(bill_length_mm~flipper_length_mm,data = .))
penguins %>%
split(list(penguins$species)) %>%
lapply(lm(bill_length_mm~flipper_length_mm,data = .))
function(x) paste0(x,'es genial!')('Francisco')
(function(x) paste0(x,'es genial!'))('Francisco')
(function(x) paste0(x,'es genial!'))('Francisco')
(function(x) paste0(x,' es genial!'))('Francisco')
(\x paste0(x, ' es genial'))('Francisco')
(\(x) paste0(x, ' es genial'))('Francisco')
install.packages('tidyverse')
library(palmerpenguins)
m <- data.frame(letters =1:5,matrix(1:25,nrow = 5))
m
m <- data.frame(letters =letters(1:5),matrix(1:25,nrow = 5))
m <- data.frame(letters =letters[1:5],matrix(1:25,nrow = 5))
m
as.vector(m)
m
m |> as.numeric()
m |> as.vector()
m |> as.vector() |> do.call(c)
m |> as.vector() |> do.call(c,_)
m |> as.vector() |> do.call(c,x=_)
?do.call
m |> as.vector() |> do.call(c,args=_)
m |> as.vector() |> do.call(c,args=_) |> attributes()
m |> as.vector() |> do.call(c,args=_) |> values()
penguins %>%
subset(species == 'Adelie')
penguins |>
subset(species == 'Adelie')
penguins |>
split(list(penguins$species)) |>
lapply( \(x) lm(bill_length_mm~flipper_length_mm,data = x))
library(palmerpenguins)
penguins |>
split(list(penguins$species)) |>
lapply( \(x) lm(bill_length_mm~flipper_length_mm,data = x))
install.packages('tidyverse')
0.25*2.2+0.25*4.5+0.5*5
m <- matrix(letters,nrwo=4)
m <- matrix(letters,nrow=4)
m
20:10
penguins |>
group_by(species)  |>
summarise(
across(
contains("mm"),
list(\(x) avg =mean(x, na.rm = TRUE), sd = sd(x, na.rm = TRUE)),
.names = "{.col}_{.fn}"
),
.groups = "drop"
)
?nest
?if_else
library(palmerpenguins)
library(dplyr)
penguins |>  select(species, body_mass_g) |>
mutate(lagged_bm = lag(body_mass_g, n = 1))
penguins |>  select(species, body_mass_g)
penguins |>  select(species, body_mass_g) |>
mutate(lagged_bm = lag(body_mass_g, n = 1))
```{r}
?read_rds
library(tidyverse)
?read_rds
data
data <- read_rds('data_estaciones_agrometAPI.rds')
write_csv(data,'data_estaciones_agrometAPI.csv')
read_csv2()
?read_csv2()
data <- read_csv2('data_estaciones_agrometAPI.csv',n_max=100)
data
data <- read_csv('data_estaciones_agrometAPI.csv',n_max=100)
data
data <- read_csv('data_estaciones_agrometAPI.csv',n_max=100,guess_max = 0)
data <- read_csv('data_estaciones_agrometAPI.csv',n_max=100)
ls()
data <- read_csv('data_estaciones_agrometAPI.csv',n_max=100)
data <- read_csv('data_estaciones_agrometAPI.csv',n_max=100,guess_max = 0)
data
data$fecha
data$fecha_hora
data$fecha_hora |> lubridate::as_datetime()
dmy("26102022")
library(lubridate)
?as_datetime
## `{lubridate}`: Obtener y ajustar fecha y horas  {.smaller .scrollable background-image="https://lubridate.tidyverse.org/logo.png" background-position="97.5% 2.5%" background-size="7.5%" layout="true"}
data |>
mutate(date = as_datetime(fecha_hora))
data |>
mutate(date = as_datetime(fecha_hora))
data |>
mutate(date = as_datetime(fecha_hora)) |> glimpse()
data |>
mutate(date = as_datetime(fecha_hora)) |> str()
?as_datetime
data |>
mutate(date = as_datetime(fecha_hora)) |> head(9)
data |>
mutate(date = as_datetime(fecha_hora)) |> head(2)
data |>
mutate(date = as_datetime(fecha_hora)) |> pull(date)
data |>
mutate(date = as_datetime(fecha_hora)) |> pull(date) |> head()
data |>
mutate(date = as_datetime(fecha_hora,tz="America/Santiago")) |> pull(date) |> head()
data |>
mutate(date = ymd_hms(fecha_hora,tz="America/Santiago")) |> pull(date) |> head()
data |>
mutate(date = ymd_hms(fecha_hora)) |> pull(date) |> head()
data |>
mutate(date = ymd_hms(fecha_hora)) |> with_tz('America/Santiago') |> pull(date) |> head()
?ymd_hm
Sys.getlocale("LC_TIME")
?force_tz
data |>
mutate(date = force_tz(ymd_hms(fecha_hora),'America/Santiago') |> pull(date) |> head()
data |>
mutate(date = force_tz(ymd_hms(fecha_hora),'America/Santiago')) |> pull(date) |> head()
dataT |>
mutate(agno = year(date),
mes = month(date),
dia = day(date),
mday = mday(date),
yday = yday(date),
wday = wday(date))
dataT |>
mutate(agno = year(date),
mes = month(date),
dia = day(date),
mday = mday(date),
yday = yday(date),
wday = wday(date))
?mday
wday(as_datetime("2022-10-26"))
wday(as_datetime("2022-10-26"),label = TRUE)
wday(as_datetime("2022-10-26"),label = TRUE, abbr = FALSE)
?make_datetime()
?as_datetime
OlsonNames()
OlsonNames()
OlsonNames() |> head(n =20)
OlsonNames() |> head(n =100)
OlsonNames() |> head(n =150)
OlsonNames() |> head(n =250)
?with_tz
fecha <- "2022-10-26"
fecha
class(fecha)
as.Date(fecha)
as.Date(fecha) |>  class()
as.Date("26-10-2022")
as.Date("26-10-2022") +1
library(lubridate)
dm
dmy("16-10-2022")
ymd("2022-10-26")
dmy("26-10-2022")
dmy("16-10-2022")
ymd("2022/10/26")
ymd("20221026")
ymd("202210263")
ymd("2022102")
ymd("2022&10&20")
ymd_hms("26/10/2022 14:30:00")
dmy_hms("26/10/2022 14:30:00")
library(tidyverse)
data <- read_csv('data_estaciones_agrometAPI.csv')
setwd("~/OneDrive/R-projects/Clases/DTSE1017/Clase11")
data <- read_csv('data_estaciones_agrometAPI.csv')
data |> glimpse()
data <- read_csv('data_estaciones_agrometAPI.csv',n_max = 100,
guess_max = 0)
data |> glimpse()
dataT <- data |>
mutate(date = as_datetime(fecha_hora)) |>
pull(date) |> glimpse()
data |>
mutate(date = as_datetime(fecha_hora)) |>
pull(date) |> glimpse()
data |>
mutate(date = as_datetime(fecha_hora)) |>
pull(date) |> glimpse()
data |>
mutate(d_fecha = as_datetime(fecha_hora)) |>
mutate(d_agno = year(d_fecha),
d_mes = month(d_fecha),
d_dia = day(d_fecha),
d_mday = mday(d_fecha),
d_yday = yday(d_fecha),
d_wday = wday(d_fecha))
?slice
data |>
mutate(d_fecha = as_datetime(fecha_hora)) |>
mutate(d_agno = year(d_fecha),
d_mes = month(d_fecha),
d_dia = day(d_fecha),
d_mday = mday(d_fecha),
d_yday = yday(d_fecha),
d_wday = wday(d_fecha)) |>
select(starts_with('d_')) |>
slice_sample(n = 6) |>
head()
data |>
mutate(d_fecha = as_datetime(fecha_hora)) |>
mutate(d_agno = year(d_fecha),
d_mes = month(d_fecha),
d_dia = day(d_fecha),
d_mday = mday(d_fecha),
d_yday = yday(d_fecha),
d_wday = wday(d_fecha)) |>
select(starts_with('d_')) |>
slice_sample(n = 6) |>
head()
seq(ymd("20221024"),ymd("20221030"),by = "1 day")
fechas <- seq(ymd("20221024"),ymd("20221030"),
by = "3 day")
fechas
fechas <- seq(ymd("20221024"),ymd("20221030"),
by = "1 day")
fechas <- seq(ymd("20221024"),ymd("20221030"),
by = "1 day")
wday(fechas,label = TRUE, abbr = FALSE)
wday(fechas)
wday(fechas, label = TRUE)
wday(fechas, label = TRUE, abbr = FALSE)
data |>
mutate(d_fecha = as_date(fecha_hora),
nueva_fecha = make_datetime(
year = year(d_fecha),
month = month(d_fecha),
day = day(fecha_hora),
tz = "America/Santiago"
)) |>
select(fecha_hora,nueva_fecha)
data$fecha_hora[1]
as_datetime(data$fecha_hora[1])
as_datetime(data$fecha_hora[1],
tz = "America/Santiago")
OlsonNames()
library(stringr)
str_detect(OlsonNames(),'America')
OlsoNames()[str_detect(OlsonNames(),'America')]
OlsonNames()
OlsoNames()[str_detect(OlsoNames(),'America')]
on <- OlsonNames()
on[str_detect(on,'America')]
data_fecha <- data |>
mutate(d_fecha = as_date(fecha_hora),
nueva_fecha = make_datetime(
year = year(d_fecha),
month = month(d_fecha),
day = day(fecha_hora),
tz = "Europe/Amsterdam"))
data_fecha
data_fecha <- data |>
mutate(d_fecha = as_datetime(fecha_hora),
nueva_fecha = make_datetime(
year = year(d_fecha),
month = month(d_fecha),
day = day(fecha_hora),
tz = "Europe/Amsterdam"))
data_fecha |> slice(1)
data$fecha_hora[1]
as_datetime(data$fecha_hora[1])
as_date(data$fecha_hora[1])
data_fecha <- data |>
mutate(d_fecha = as_datetime(fecha_hora),
nueva_fecha = make_datetime(
year = year(d_fecha),
month = month(d_fecha),
day = day(d_fecha),
tz = "Europe/Amsterdam"))
data_fecha
data_fech[1,]
data_fecha[1,]
data_fecha$d_fecha[1]
data_fecha$d_fecha[1]
with_tz(data_fecha$d_fecha,tz = 'America/Santiago')
data_fecha$d_fecha[1]
with_tz(data_fecha$d_fecha[1],tz = 'America/Santiago')
fechas <- data$fecha_hora[1:5]
fechas
as_datetime(fechas)
as_datetime(fechas,tz= "America/Santiago")
fechas
as_datetime(fechas)
force_tz(as_datetime(fechas),tz = 'America/Santiago')
force_tz(as_datetime(fechas),tz = 'America/Santiago')
as_datetime(fechas)
data_fecha$d_fecha[1]
with_tz(data_fecha$d_fecha[1],tz = 'America/Santiago')
as_datetime(fechas,tz = 'America/Santiago')
force_tz(as_datetime(fechas),tz = 'America/Santiago')
as_datetime(fechas,tz = 'America/Santiago')
as_datetime(fechas)
as_datetime(fechas,tz = 'America/Santiago')
as_datetime(fechas)
force_tz(as_datetime(fechas),tz = 'America/Santiago')
fechas
as_datetime(fechas,tz = 'America/Santiago')
as_datetime(fechas)
force_tz(as_datetime(fechas),tz = 'America/Santiago')
floor_date(fecha, "3 day")
?floor_date
floor_date(fecha, "3 days")
floor_date(fecha, "1 month")
floor_date(fechas, "1 month")
fechas
floor_date(as_datetime(fechas), "1 month")
floor_date(as_datetime(fechas), "1 day")
floor_date(as_datetime(fechas), "3 day")
floor_date(as_datetime(fechas), "1 day")
list.files('~')
list.files('~/Descargas')
library(readr)
read_rds('~/Descargas/ejemplo_data.rds')
data <- read_rds('~/Descargas/ejemplo_data.rds')
head(data)
data |> glimpse()
library(tidyverse)
data <- read_rds('~/Descargas/ejemplo_data.rds')
data |> glimpse()
data
data
data |>
arrange(date) |>
distinct(2:8)
data |>
arrange(date) |>
distinct(orchard:counterType)
?distninct
?distinct
data |>
arrange(date) |>
select(orchard:counterType) |>
distinct()
data |>
arrange(date) |>
select(orchard:counterType) |>
distinct()
data |>
arrange(date) |>
select(orchard:counterType)
data |>
arrange(date) |>
select(orchard:counterType)
data
data |>
arrange(date)
data |>
arrange(date) |> print(n=20)
data |>
arrange(date) |> print(n=50)
data |>
arrange(date) |>
select(orchard:counterType) |>
distinct()
data |>
arrange(date) |>
select(orchard:counterType) |>
distinct() |> print(n=30)
data
?distinct
data |>
arrange(date) |>
select(orchard:counterType) |>
distinct(.keep_all = TRUE) |> print(n=30)
data |>
arrange(date) |>
select(orchard:counterType) |>
distinct(.keep_all = TRUE) |> print(n=30)
data |>
arrange(date) |>
#select(orchard:counterType) |>
distinct(across(2:8)) |> print(n=30)
data |>
arrange(date) |>
#select(orchard:counterType) |>
distinct(across(2:8),.keep_all = TRUE)
data |>
arrange(date) |>
#select(orchard:counterType) |>
distinct(across(2:8),.keep_all = TRUE) |> print(n=50)
data
data |>
arrange(date) |>
distinct(across(2:8),.keep_all = TRUE) |> print(n=50)
