r$terms
r$residuals
r$aliased
r$fstatistic
summary(model)$coefficients
iris_lm <- iris |>
group_by(Species) |>
nest() |>
mutate(lm = map(data,\(x) lm(Sepal.Length~., data = x)))
iris_lm
iris_lm |>
mutate(coefs = map(lm,\(x) {
summary(x)$coefficients
}))
iris_lm |>
mutate(coefs = map(lm,\(x) {
summary(x)$coefficients
}))
iris_lm |>
mutate(coefs = map(lm,\(x) {
summary(x)$coefficients
})) |> unnest(coefs)
?possibly
library(purrr)
?possibly
list("a", 10, 100) |>
map_dbl(safely(log,otherwise = NULL))
a <- list("a", 10, 100) |>
map_dbl(safely(log,otherwise = NULL))
a
a <- list("a", 10, 100) |>
map(safely(log,otherwise = NULL))
a
library(tidyr)
library(dplyr)
iris_nest <- iris |>
group_by(Species) |>
nest()
iris_nest
iris_nest$data
iris_nest$data |>
lapply(\(x) lm(Sepal.Length~Petal.Length, data = x))
iris_lm <- iris |>
group_by(Species) |>
nest() |>
mutate(lm =lapply(data,\(x) lm(Sepal.Length~Petal.Length, data = x)))
iris_lm
lapply(1:10,function(x) log)
lapply(1:1000,log)
system.time(lapply(1:1000,log))
system.time(lapply(1:1e6,log))
system.time(
for (i in 1:1e6){
log(i)
}
)
system.time(lapply(1:1e6,log))
system.time(sapply(1:1e6,log))
system.time(lapply(1:1e6,log))
system.time(
for (i in 1:1e6){
log(i)
}
)
system.time(v <- lapply(1:1e6,log))
system.time(
v <- for (i in 1:1e6){
log(i)
}
)
v
v <- c()
v <- c()
system.time(
for (i in 1:1e6){
v[i] <- log(i)
}
)
system.time(v <- lapply(1:1e6,log))
numeric(1e6)
v <- numeric(1e6)
system.time(
for (i in 1:1e6){
v[i] <- log(i)
}
)
system.time(v <- lapply(1:1e6,log))
system.time(v <- vapply(1:1e6,log))
?vapply
system.time(v <- vapply(1:1e6,FUN = log))
system.time(v <- vapply(1:1e6,FUN = log,FUN.VALUE = numeric(1e6)))
v
v <- numeric(1e6)
system.time(
for (i in 1:1e6){
v[i] <- log(i)
}
)
setwd("~/OneDrive/R-projects/Clases/DTSE1017/Evaluaciones/data")
library(readr)
data <- read_csv('data_yara.csv')
data
data |> names()
names(data)[1]
names(data)[1] <- 'datetime'
library(dplyr)
data
data |> pivot_longer(-datetime)
library(tidyr)
data |> pivot_longer(-datetime)
library(stringr)
data |> pivot_longer(-datetime) |> mutate(name=str_extract(name,'[0-9]{4}'))
data |> pivot_longer(-datetime) |> mutate(name=str_extract(name,'[0-9]{4}')) |> head()
data |> pivot_longer(-datetime) |> mutate(name=str_extract(name,'[0-9]{4}')) |> head() |> group_by(date_time,name) |> summarize(value = mean(value))
data |> pivot_longer(-datetime) |> mutate(name=str_extract(name,'[0-9]{4}')) |> head() |> group_by(datetime,name) |> summarize(value = mean(value))
setwd("~/OneDrive/R-projects/Clases/Talleres-DTSE1017/data/data_raw")
library(readr)
dataAGV <- read_rds('data_agvAPI.rds')
dataAGV
dataAGV[[1]]
data_agromet <- read_rds('data_estaciones_agrometAPI.rds')
data_agromet
data_meta_agromet <- read_rds('metadata_estaciones_agrometAPI.rds')
data_meta_agromet
data_meta_agromet
data_meta_agromet |> distinct(nombre)
data_meta_agromet |> pull(nombre)
library(tidyr)
data_meta_agromet |> pull(nombre)
library(tidyverse)
data_meta_agromet |> pull(nombre)
names(data_meta_agromet)
data_meta_agromet |> pull(nombre_ema)
data_meta_agromet |> filter(nombre_ema == 'Andacollo')
dataAGV
dataAGV[1:10]
l <- dataAGV[1:10]
l |> slice(1)
l
l |> lapply(function(x) x |> slice(1))
l |> lapply(function(x) x |> slice(1) |> pluck(data))
l |> lapply(function(x) x |> slice(1) |> hoist(data,'value'))
l[[1]]
l[[1]]$data[[1]]
l |> lapply(function(x) x |> slice(1) |> hoist(data,'measurements'))
l |> lapply(function(x) x |> slice(1) |> hoist(data,'measurements') |> unnest(measurements))
l[[1]]
l[[1]]$data[[1]]
l[[1]]$data[[1]] |>  class()
l[[1]]$data[[1]] |>  tidy_names()
l[[1]]$data[[1]] |>  as_tibble()
l[[1]]$data[[1]] |>  as_tibble() |> unnest(measurements)
list(iris,mtcars)
tibble(set = c('iris','mtcars',list(iris,mtcars))
)
tibble(set = c('iris','mtcars'),data = list(iris,mtcars))
iris
tibble(set = c('iris','mtcars'),data = list(iris,mtcars))
tibble(set = c('iris','mtcars'),data = list(iris,mtcars)) |> unnest(data)
data_agromet
data_agromet |> group_by(station_id) |> slice_sample(10)
data_agromet |> group_by(station_id) |> slice_sample(n = 10)
data_agromet |> group_by(station_id) |> slice_sample(n = 10) |> distinct(station_id)
iris |> slice_sample(5)
iris |> slice_sample(n = 5)
iris |> group_by(Species) |> slice_sample(n = 5)
data_agromet |> slice_sample(n = 10) |> distinct(station_id)
data_agromet |> slice_sample(n = 10)
tibble(set = c('iris','mtcars'),data = list(iris,mtcars))
iris |> group_by(Species) |> nest()
data <- iris |>
group_by(Species) |>
nest()
class(data)
?nest
data <- iris |>
group_by(Species) |>
nest() |>
ungroup()
data
data
lapply(data$data,dim)
data$data
lapply(data$data,function(x) x[,1:4])
lapply(data$data,function(x) x[,1:4]) |> unlist()
lapply(data$data,function(x) x[,1:4]) |> do.call(rbind)
?do.call
lapply(data$data,function(x) x[,1:4]) |> do.call(rbind,args = _)
lapply(data$data,function(x) x[,c(1,4]) |> do.call(rbind,args = _)
lapply(data$data,function(x) x[,c(1,4)]) |> do.call(rbind,args = _)
data_agromet |> select(station_id) |> slice(5)
data_agromet |> select(station_id) |> slice(n=5)
data_agromet |> select(station_id)
data_agromet |> slice_sample(n = 10) |> distinct(station_id)
data_agromet |> slice_sample(n = 10) |> distinct(station_id)
data_agromet |> select(station_id) |> slice(n=5)
data_agromet |> slice(n=5) |> select(station_id)
data_agromet
data_agromet |> slice_sample(n=5) |> select(station_id)
tibble(set = c('iris','mtcars'),data = list(iris,mtcars))
tibble(set = c('iris','mtcars'),data = list(iris,mtcars))
sele <- data_agromet |> slice_sample(n=5) |> select(station_id) |> pull(station_id)
sele
ids <- data_agromet |>
slice_sample(n=5) |>
select(station_id) |>
pull(station_id)
data_agromet |> filter(station_id %in% ids)
names(data_agromet)
data_agromet$fecha_hora |> range()
data_agromet |>
filter(station_id %in% ids)
data_agromet |>
filter(station_id %in% ids) |>
select(fecha_hoara:temp_maxima) |>
group_by(station_id) |>
nest()
data_agromet |>
filter(station_id %in% ids) |>
select(fecha_hora:temp_maxima) |>
group_by(station_id) |>
nest()
data_agromet |>
filter(station_id %in% ids) |>
select(station_id:temp_maxima) |>
group_by(station_id) |>
nest()
?hoist
data_agromet |>
filter(station_id %in% ids) |>
select(station_id:temp_maxima) |>
group_by(station_id) |>
nest() |>
ungroup() |>
hoist(.col = c('temp_promedio_aire'))
data_agromet |>
filter(station_id %in% ids) |>
select(station_id:temp_maxima) |>
group_by(station_id) |>
nest() |>
ungroup() |>
hoist(.col = 'temp_promedio_aire')
data_agromet |>
filter(station_id %in% ids) |>
select(station_id:temp_maxima) |>
group_by(station_id) |>
nest() |>
ungroup() |>
hoist(col = 'temp_promedio_aire')
data_agromet |>
filter(station_id %in% ids) |>
select(station_id:temp_maxima) |>
group_by(station_id) |>
nest() |>
ungroup() |>
hoist(data,col = 'temp_promedio_aire')
data_agromet |>
filter(station_id %in% ids) |>
select(station_id:temp_maxima) |>
group_by(station_id) |>
nest() |>
ungroup() |>
hoist(data,temp_prom = 'temp_promedio_aire',temp_max = 'temp_maxima')
data_agromet |>
filter(station_id %in% ids) |>
select(station_id:temp_maxima) |>
group_by(station_id) |>
nest() |>
ungroup() |>
hoist(data,temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',temp_min = 'temp_minima')
data_agromet |>
filter(station_id %in% ids) |>
select(station_id:temp_maxima) |>
group_by(station_id) |>
nest() |>
ungroup() |>
hoist(data,temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',temp_min = 'temp_minima') |>
unnest(where(contains('temp')))
data_agromet |>
filter(station_id %in% ids) |>
select(station_id:temp_maxima) |>
group_by(station_id) |>
nest() |>
ungroup() |>
hoist(data,temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',temp_min = 'temp_minima') |>
unnest(contains('temp'))
data_agromet |>
filter(station_id %in% ids) |>
select(station_id:temp_maxima) |>
group_by(station_id) |>
nest() |>
ungroup() |>
# hoist(data,temp_prom = 'temp_promedio_aire',
#       temp_max = 'temp_maxima',temp_min = 'temp_minima') |>
unnest(data)
library(tidyr)
library(dplyr)
ids <- data_agromet |>
slice_sample(n=5) |>
select(station_id) |>
pull(station_id)
library(readr)
data_agromet <- read_rds('data/data_estaciones_agrometAPI.rds')
data_agromet
??ungroup
?ungroup
?nest
data_unnest |>
group_by(station_id, mes = floor_date(fecha_hora, '1 month')) |>
summarize(across(is.numeric),mean,na.rm = TRUE)
data_unnest <- data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',temp_min = 'temp_minima') |>
unnest(contains('temp')) |>
select(-data)
data_unnest <- data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',temp_min = 'temp_minima') |>
unnest(contains('temp')) |>
unnest(fecha_hora) |>
select(-data)
data_nest <- data_agromet |>
group_by(station_id) |>
nest() |>
ungroup()
data_nest <- data_agromet |>
group_by(station_id) |>
nest() |>
ungroup()
data_nest
data_unnest <- data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',temp_min = 'temp_minima') |>
unnest(contains('temp')) |>
unnest(fecha_hora) |>
select(-data)
data_nest
library(readr)
data_agromet <- read_rds('data/data_estaciones_agrometAPI.rds')
#| echo: true
ids <- data_agromet |>
slice_sample(n=5) |>
select(station_id) |>
pull(station_id)
#| message: false
library(dplyr)
library(tidyr)
data <- iris |>
group_by(Species) |>
nest() |>
ungroup()
library(readr)
data_agromet <- read_rds('data/data_estaciones_agrometAPI.rds')
#| echo: true
ids <- data_agromet |>
slice_sample(n=5) |>
select(station_id) |>
pull(station_id)
ids
data_agromet <- data_agromet |>
filter(station_id %in% ids) |>
select(station_id:temp_maxima)
data_agromet |> glimpse()
data_nest <- data_agromet |>
group_by(station_id) |>
nest() |>
ungroup()
data_nest
data_unnest <- data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',temp_min = 'temp_minima') |>
unnest(contains('temp')) |>
unnest(fecha_hora) |>
select(-data)
data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',temp_min = 'temp_minima')
data_unnest <- data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',temp_min = 'temp_minima') |>
unnest(fecha_hora,contains('temp')) |>
select(-data)
?unnest
data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',temp_min = 'temp_minima') |>
unnest(cols = fecha_hora,contains('temp'))
data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',
temp_min = 'temp_minima') |>
unnest(cols = c(fecha_hora,temp_prom,tem_max,temp_min))
data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',
temp_min = 'temp_minima')
data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',
temp_min = 'temp_minima')
data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',
temp_min = 'temp_minima') |>
unnest(cols = c(fecha_hora,temp_prom,temp_max,temp_min))
data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',
temp_min = 'temp_minima') |>
unnest(cols = c(fecha_hora,temp_prom,temp_max,temp_min))
data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',
temp_min = 'temp_minima') |>
unnest(cols = c(fecha_hora,temp_prom,temp_max,temp_min)) |>
select(-data)
library(lubridate)
data_unnest |>
group_by(station_id, mes = floor_date(fecha_hora, '1 month')) |>
summarize(across(is.numeric),mean,na.rm = TRUE)
data_unnest <- data_nest |>
hoist(data,
fecha_hora = 'fecha_hora',
temp_prom = 'temp_promedio_aire',
temp_max = 'temp_maxima',
temp_min = 'temp_minima') |>
unnest(cols = c(fecha_hora,temp_prom,temp_max,temp_min)) |>
select(-data)
data_unnest
library(lubridate)
data_unnest |>
group_by(station_id, mes = floor_date(fecha_hora, '1 month')) |>
summarize(across(is.numeric),mean,na.rm = TRUE)
data_unnest |>
group_by(station_id, mes = floor_date(fecha_hora, '1 month'))
data_unnest |>
group_by(station_id, mes = floor_date(fecha_hora, '1 month')) |>
summarize(across(is.numeric),mean,na.rm = TRUE)
data_unnest |>
group_by(station_id, mes = floor_date(fecha_hora, '1 month'))
data_unnest |>
group_by(station_id, mes = floor_date(fecha_hora, '1 month')) |>
summarize(across(contains('temp')),mean,na.rm = TRUE)
library(lubridate)
data_unnest |>
group_by(station_id, mes = floor_date(fecha_hora, '1 month')) |>
summarize(across(contains('temp')),mean,na.rm = TRUE)
data_unnest |>
group_by(station_id, mes = floor_date(fecha_hora, '1 month')) |>
summarize(across(contains('temp'),mean,na.rm = TRUE))
data_mes
data_mes <- data_unnest |>
group_by(station_id, mes = floor_date(fecha_hora, '1 month')) |>
summarize(across(contains('temp'),mean,na.rm = TRUE))
data_mes
data_mes
data_mes |>
pivot_longer(3:5)
data_long <- data_mes |>
pivot_longer(3:5)
data_long |>
ggplot(aes(mes,value,color =name)) +
facet_grid(station_id~.) +
theme_bw()
library(ggplot2)
data_long |>
ggplot(aes(mes,value,color =name)) +
facet_grid(station_id~.) +
theme_bw()
data_long
met <- read_rds('metadata_estaciones_agrometAPI.rds')
data_long |>
left_join(met, by = c('station_id' = 'ema'))
met <- read_rds('metadata_estaciones_agrometAPI.rds')
met <- read_rds('data/metadata_estaciones_agrometAPI.rds')
data_long |>
left_join(met, by = c('station_id' = 'ema'))
data_long |>
left_join(select(met,c(ema,nombre_ema)), by = c('station_id' = 'ema'))
select(met,c(ema,nombre_ema)
select(met,c(ema,nombre_ema))
data_long |>
left_join(select(met,c(ema,nombre_ema)), by = c('station_id' = 'ema'))
